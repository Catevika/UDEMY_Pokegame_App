{"version":3,"sources":["components/Pokecard.js","components/Pokedex.js","components/Pokegame.js","App.js","index.js"],"names":["Pokecard","number","imgSrc","this","props","id","slice","className","name","src","alt","type","exp","Component","Pokedex","title","isWinner","style","color","pokemons","map","card","base_experience","Pokegame","hand1","hand2","length","randIndex","Math","floor","random","randPokemon","splice","push","exp1","reduce","exp2","defaultProps","App","ReactDOM","render","document","getElementById"],"mappings":"mOAuBeA,G,6KAfX,IAJaC,EAITC,EAAM,UALC,8DAKD,QAJGD,EAIyBE,KAAKC,MAAMC,KAJf,IAAM,YAAKJ,GAASK,OAAO,GAAKL,EAIxD,QAEV,OACE,sBAAKM,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCJ,KAAKC,MAAMI,OAC3C,qBAAKD,UAAU,iBAAf,SACE,qBAAKE,IAAKP,EAAQQ,IAAI,OAExB,sBAAKH,UAAU,gBAAf,mBAAsCJ,KAAKC,MAAMO,QACjD,sBAAKJ,UAAU,gBAAf,kBAAqCJ,KAAKC,MAAMQ,c,GAXjCC,cCmCRC,G,6KAnCX,IAAIC,EAeJ,OAbEA,EADEZ,KAAKC,MAAMY,SAEX,oBAAIT,UAAU,iBAAiBU,MAAO,CAAEC,MAAO,QAA/C,0BAMA,oBAAIX,UAAU,gBAAgBU,MAAO,CAAEC,MAAO,UAA9C,yBAOF,sBAAKX,UAAU,UAAf,UACE,oDAAuBJ,KAAKC,MAAMQ,OACjCG,EACD,qBAAKR,UAAU,oBAAf,SACGJ,KAAKC,MAAMe,SAASC,KAAI,SAAAC,GAAI,OAC3B,cAAC,EAAD,CAEEhB,GAAIgB,EAAKhB,GACTG,KAAMa,EAAKb,KACXG,KAAMU,EAAKV,KACXC,IAAKS,EAAKC,iBAJLD,EAAKhB,gB,GAxBFQ,cCDhBU,E,uKAiBF,IAHA,IAAIC,EAAQ,GACRC,EAAK,YAAOtB,KAAKC,MAAMe,UAEpBK,EAAME,OAASD,EAAMC,QAAQ,CAClC,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,QAC7CK,EAAcN,EAAMO,OAAOL,EAAW,GAAG,GAC7CH,EAAMS,KAAKF,GAGb,IAAIG,EAAOV,EAAMW,QACf,SAACvB,EAAKO,GAAN,OAAmBP,EAAMO,EAASG,kBAClC,GAGEc,EAAOX,EAAMU,QACf,SAACvB,EAAKO,GAAN,OAAmBP,EAAMO,EAASG,kBAClC,GAGF,OACE,gCACE,cAAC,EAAD,CAASH,SAAUK,EAAOZ,IAAKsB,EAAMlB,SAAUkB,EAAOE,IACtD,cAAC,EAAD,CAASjB,SAAUM,EAAOb,IAAKwB,EAAMpB,SAAUoB,EAAOF,W,GApCvCrB,aAAjBU,EACGc,aAAe,CACpBlB,SAAU,CACR,CAAEd,GAAI,EAAGG,KAAM,aAAcG,KAAM,OAAQW,gBAAiB,IAC5D,CAAEjB,GAAI,EAAGG,KAAM,WAAYG,KAAM,QAASW,gBAAiB,IAC3D,CAAEjB,GAAI,GAAIG,KAAM,UAAWG,KAAM,MAAOW,gBAAiB,IACzD,CAAEjB,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUW,gBAAiB,KAC/D,CAAEjB,GAAI,GAAIG,KAAM,UAAWG,KAAM,WAAYW,gBAAiB,KAC9D,CAAEjB,GAAI,GAAIG,KAAM,aAAcG,KAAM,SAAUW,gBAAiB,IAC/D,CAAEjB,GAAI,GAAIG,KAAM,SAAUG,KAAM,SAAUW,gBAAiB,KAC3D,CAAEjB,GAAI,IAAKG,KAAM,QAASG,KAAM,SAAUW,gBAAiB,MAgClDC,QChCAe,E,uKARX,OACE,qBAAK/B,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJUM,aCClB0B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.495dfb0d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../components/Pokecard.css';\r\n\r\nlet POKE_API = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/';\r\nlet padToThree = number => (number <= 999 ? `00${number}`.slice(-3) : number);\r\n\r\nclass Pokecard extends Component {\r\n  render() {\r\n    let imgSrc = `${POKE_API}${padToThree(this.props.id)}.png`;\r\n\r\n    return (\r\n      <div className='Pokecard'>\r\n        <h2 className='Pokecard-title'>{this.props.name}</h2>\r\n        <div className='Pokecard-image'>\r\n          <img src={imgSrc} alt='' />\r\n        </div>\r\n        <div className='Pokecard-data'>Type: {this.props.type}</div>\r\n        <div className='Pokecard-data'> XP: {this.props.exp}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokecard;\r\n","import React, { Component } from 'react';\r\nimport Pokecard from './Pokecard';\r\nimport './Pokedex.css';\r\n\r\nclass Pokedex extends Component {\r\n  render() {\r\n    let title;\r\n    if (this.props.isWinner) {\r\n      title = (\r\n        <h2 className='Pokedex-Winner' style={{ color: 'teal' }}>\r\n          Winning hand\r\n        </h2>\r\n      );\r\n    } else {\r\n      title = (\r\n        <h2 className='Pokedex-Loser' style={{ color: 'maroon' }}>\r\n          Losing hand\r\n        </h2>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className='Pokedex'>\r\n        <h2>Total Experience: {this.props.exp}</h2>\r\n        {title}\r\n        <div className='Pokedex-container'>\r\n          {this.props.pokemons.map(card => (\r\n            <Pokecard\r\n              key={card.id}\r\n              id={card.id}\r\n              name={card.name}\r\n              type={card.type}\r\n              exp={card.base_experience}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React, { Component } from 'react';\r\nimport Pokedex from './Pokedex';\r\n\r\nclass Pokegame extends Component {\r\n  static defaultProps = {\r\n    pokemons: [\r\n      { id: 4, name: 'Charmander', type: 'fire', base_experience: 62 },\r\n      { id: 7, name: 'Squirtle', type: 'water', base_experience: 63 },\r\n      { id: 11, name: 'Metapod', type: 'bug', base_experience: 72 },\r\n      { id: 12, name: 'Butterfree', type: 'flying', base_experience: 178 },\r\n      { id: 25, name: 'Pikachu', type: 'electric', base_experience: 112 },\r\n      { id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95 },\r\n      { id: 94, name: 'Gengar', type: 'poison', base_experience: 225 },\r\n      { id: 133, name: 'Eevee', type: 'normal', base_experience: 65 }\r\n    ]\r\n  };\r\n  render() {\r\n    let hand1 = [];\r\n    let hand2 = [...this.props.pokemons];\r\n\r\n    while (hand1.length < hand2.length) {\r\n      let randIndex = Math.floor(Math.random() * hand2.length);\r\n      let randPokemon = hand2.splice(randIndex, 1)[0];\r\n      hand1.push(randPokemon);\r\n    }\r\n\r\n    let exp1 = hand1.reduce(\r\n      (exp, pokemons) => exp + pokemons.base_experience,\r\n      0\r\n    );\r\n\r\n    let exp2 = hand2.reduce(\r\n      (exp, pokemons) => exp + pokemons.base_experience,\r\n      0\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Pokedex pokemons={hand1} exp={exp1} isWinner={exp1 > exp2} />\r\n        <Pokedex pokemons={hand2} exp={exp2} isWinner={exp2 > exp1} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pokegame;\r\n","import React, { Component } from 'react';\r\nimport Pokegame from './components/Pokegame';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Pokegame />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}